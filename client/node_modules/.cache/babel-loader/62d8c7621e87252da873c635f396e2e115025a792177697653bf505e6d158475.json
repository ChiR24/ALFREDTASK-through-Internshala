{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();export const useTheme=()=>{const context=useContext(ThemeContext);if(!context){throw new Error('useTheme must be used within a ThemeProvider');}return context;};export const ThemeProvider=_ref=>{let{children}=_ref;const[isDark,setIsDark]=useState(()=>{const savedTheme=localStorage.getItem('theme');return savedTheme?savedTheme==='dark':window.matchMedia('(prefers-color-scheme: dark)').matches;});useEffect(()=>{const root=window.document.documentElement;if(isDark){root.classList.add('dark');localStorage.setItem('theme','dark');}else{root.classList.remove('dark');localStorage.setItem('theme','light');}},[isDark]);const toggleTheme=()=>{setIsDark(prev=>!prev);};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{isDark,toggleTheme},children:children});};export default ThemeProvider;","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","ThemeContext","useTheme","context","Error","ThemeProvider","_ref","children","isDark","setIsDark","savedTheme","localStorage","getItem","window","matchMedia","matches","root","document","documentElement","classList","add","setItem","remove","toggleTheme","prev","Provider","value"],"sources":["X:/GitHub/ALFREDTASK through Internshala/client/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport const ThemeProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const savedTheme = localStorage.getItem('theme');\n    return savedTheme ? savedTheme === 'dark' : window.matchMedia('(prefers-color-scheme: dark)').matches;\n  });\n\n  useEffect(() => {\n    const root = window.document.documentElement;\n    if (isDark) {\n      root.classList.add('dark');\n      localStorage.setItem('theme', 'dark');\n    } else {\n      root.classList.remove('dark');\n      localStorage.setItem('theme', 'light');\n    }\n  }, [isDark]);\n\n  const toggleTheme = () => {\n    setIsDark(prev => !prev);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeProvider; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAAC,CAAC,CAEpC,MAAO,MAAM,CAAAO,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAGP,UAAU,CAACK,YAAY,CAAC,CACxC,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGZ,QAAQ,CAAC,IAAM,CACzC,KAAM,CAAAa,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAChD,MAAO,CAAAF,UAAU,CAAGA,UAAU,GAAK,MAAM,CAAGG,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,CACvG,CAAC,CAAC,CAEFjB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAkB,IAAI,CAAGH,MAAM,CAACI,QAAQ,CAACC,eAAe,CAC5C,GAAIV,MAAM,CAAE,CACVQ,IAAI,CAACG,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC,CAC1BT,YAAY,CAACU,OAAO,CAAC,OAAO,CAAE,MAAM,CAAC,CACvC,CAAC,IAAM,CACLL,IAAI,CAACG,SAAS,CAACG,MAAM,CAAC,MAAM,CAAC,CAC7BX,YAAY,CAACU,OAAO,CAAC,OAAO,CAAE,OAAO,CAAC,CACxC,CACF,CAAC,CAAE,CAACb,MAAM,CAAC,CAAC,CAEZ,KAAM,CAAAe,WAAW,CAAGA,CAAA,GAAM,CACxBd,SAAS,CAACe,IAAI,EAAI,CAACA,IAAI,CAAC,CAC1B,CAAC,CAED,mBACExB,IAAA,CAACC,YAAY,CAACwB,QAAQ,EAACC,KAAK,CAAE,CAAElB,MAAM,CAAEe,WAAY,CAAE,CAAAhB,QAAA,CACnDA,QAAQ,CACY,CAAC,CAE5B,CAAC,CAED,cAAe,CAAAF,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}